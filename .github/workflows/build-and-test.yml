name: Build and Test

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main


jobs:

  macos-build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-10.15, macos-latest ]
        java: [ 11, 15, 17 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          architecture: x64
          java-package: jdk+fx
          cache: 'maven'

      - name: Build/test code with Maven
        run: mvn -B install --file pom.xml

      - name: Upload CodeCov Report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: matrix.os == 'macos-10.15' && matrix.java == 9


  windows-build:

    runs-on: windows-2019
    strategy:
      matrix:
        java: [ 11, 15, 17 ]

    steps:
      - name: Install Scream (Virtual Audio Device)
        shell: powershell
        run: |
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.8/Scream3.8.zip -OutFile Scream3.8.zip
          Expand-Archive -Path Scream3.8.zip -DestinationPath Scream
          Import-Certificate -FilePath Scream\Install\driver\x64\Scream.cat -CertStoreLocation Cert:\LocalMachine\TrustedPublisher
          Scream\Install\helpers\devcon-x64.exe install Scream\Install\driver\x64\Scream.inf *Scream

      - uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          java-package: jdk+fx
          cache: 'maven'

      - name: Build/test code with Maven
        run: |
          which mvn
          mvn -B install --file pom.xml


  linux-build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-latest ]
        java: [ 11, 15, 17 ]

    steps:
      - uses: actions/checkout@v2

      - name: Jackd (Virtual Audio Device)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y alsa-base
          sudo apt-get install -y alsa-utils
          sudo apt-get install -y jackd

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          java-package: jdk+fx
          cache: 'maven'

      - name: Build/test code with Maven
        run: |
          groups
          sudo usermod -a -G audio $USER
          groups
          jackd -rd dummy &
          cat $JAVA_HOME/conf/sound.properties
          sudo echo "javax.sound.sampled.Clip=com.sun.media.sound.DirectAudioDeviceProvider" >> $JAVA_HOME/conf/sound.properties
          sudo echo "javax.sound.sampled.Port=com.sun.media.sound.PortMixerProvider" >> $JAVA_HOME/conf/sound.properties
          sudo echo "javax.sound.sampled.SourceDataLine=com.sun.media.sound.DirectAudioDeviceProvider" >> $JAVA_HOME/conf/sound.properties
          sudo echo "javax.sound.sampled.TargetDataLine=com.sun.media.sound.DirectAudioDeviceProvider" >> $JAVA_HOME/conf/sound.properties
          cat $JAVA_HOME/conf/sound.properties
          xvfb-run mvn -B install --file pom.xml
